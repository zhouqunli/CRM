<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qy25.sm.mapper.SupplierMapper">
  <resultMap id="BaseResultMap" type="com.qy25.sm.entity.Supplier">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supplier_contact" jdbcType="VARCHAR" property="supplierContact" />
    <result column="supplier_phone" jdbcType="VARCHAR" property="supplierPhone" />
    <result column="supplier_email" jdbcType="VARCHAR" property="supplierEmail" />
    <result column="supplier_address" jdbcType="VARCHAR" property="supplierAddress" />
    <result column="supplier_brank" jdbcType="VARCHAR" property="supplierBrank" />
    <result column="supplier_brank_code" jdbcType="VARCHAR" property="supplierBrankCode" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, supplier_name, supplier_contact, supplier_phone, supplier_email, supplier_address, 
    supplier_brank, supplier_brank_code, add_time, create_id, update_time, update_id
  </sql>
  <select id="selectByExample" parameterType="com.qy25.sm.entity.SupplierExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_supplier
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_supplier
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qy25.sm.entity.SupplierExample">
    delete from t_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qy25.sm.entity.Supplier">
    insert into t_supplier (id, supplier_name, supplier_contact, 
      supplier_phone, supplier_email, supplier_address, 
      supplier_brank, supplier_brank_code, add_time, 
      create_id, update_time, update_id
      )
    values (#{id,jdbcType=BIGINT}, #{supplierName,jdbcType=VARCHAR}, #{supplierContact,jdbcType=VARCHAR}, 
      #{supplierPhone,jdbcType=VARCHAR}, #{supplierEmail,jdbcType=VARCHAR}, #{supplierAddress,jdbcType=VARCHAR}, 
      #{supplierBrank,jdbcType=VARCHAR}, #{supplierBrankCode,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{createId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qy25.sm.entity.Supplier">
    insert into t_supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="supplierContact != null">
        supplier_contact,
      </if>
      <if test="supplierPhone != null">
        supplier_phone,
      </if>
      <if test="supplierEmail != null">
        supplier_email,
      </if>
      <if test="supplierAddress != null">
        supplier_address,
      </if>
      <if test="supplierBrank != null">
        supplier_brank,
      </if>
      <if test="supplierBrankCode != null">
        supplier_brank_code,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierContact != null">
        #{supplierContact,jdbcType=VARCHAR},
      </if>
      <if test="supplierPhone != null">
        #{supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="supplierEmail != null">
        #{supplierEmail,jdbcType=VARCHAR},
      </if>
      <if test="supplierAddress != null">
        #{supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="supplierBrank != null">
        #{supplierBrank,jdbcType=VARCHAR},
      </if>
      <if test="supplierBrankCode != null">
        #{supplierBrankCode,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qy25.sm.entity.SupplierExample" resultType="java.lang.Long">
    select count(*) from t_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_supplier
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.supplierName != null">
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierContact != null">
        supplier_contact = #{record.supplierContact,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierPhone != null">
        supplier_phone = #{record.supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierEmail != null">
        supplier_email = #{record.supplierEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierAddress != null">
        supplier_address = #{record.supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierBrank != null">
        supplier_brank = #{record.supplierBrank,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierBrankCode != null">
        supplier_brank_code = #{record.supplierBrankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_supplier
    set id = #{record.id,jdbcType=BIGINT},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      supplier_contact = #{record.supplierContact,jdbcType=VARCHAR},
      supplier_phone = #{record.supplierPhone,jdbcType=VARCHAR},
      supplier_email = #{record.supplierEmail,jdbcType=VARCHAR},
      supplier_address = #{record.supplierAddress,jdbcType=VARCHAR},
      supplier_brank = #{record.supplierBrank,jdbcType=VARCHAR},
      supplier_brank_code = #{record.supplierBrankCode,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      create_id = #{record.createId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy25.sm.entity.Supplier">
    update t_supplier
    <set>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierContact != null">
        supplier_contact = #{supplierContact,jdbcType=VARCHAR},
      </if>
      <if test="supplierPhone != null">
        supplier_phone = #{supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="supplierEmail != null">
        supplier_email = #{supplierEmail,jdbcType=VARCHAR},
      </if>
      <if test="supplierAddress != null">
        supplier_address = #{supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="supplierBrank != null">
        supplier_brank = #{supplierBrank,jdbcType=VARCHAR},
      </if>
      <if test="supplierBrankCode != null">
        supplier_brank_code = #{supplierBrankCode,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy25.sm.entity.Supplier">
    update t_supplier
    set supplier_name = #{supplierName,jdbcType=VARCHAR},
      supplier_contact = #{supplierContact,jdbcType=VARCHAR},
      supplier_phone = #{supplierPhone,jdbcType=VARCHAR},
      supplier_email = #{supplierEmail,jdbcType=VARCHAR},
      supplier_address = #{supplierAddress,jdbcType=VARCHAR},
      supplier_brank = #{supplierBrank,jdbcType=VARCHAR},
      supplier_brank_code = #{supplierBrankCode,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>